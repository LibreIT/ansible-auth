---
- name: install sudo
  ansible.builtin.apt:
    name: sudo
    state: present
    lock_timeout: 160
  tags: sudo

- name: create admin group
  ansible.builtin.group: 
    name: "{{ auth_sysadmin_group }}"
    gid: "{{ auth_sysadmin_gid }}"
  when: (auth_sysadmin_group is defined) and (auth_sysadmin_gid is defined)
  tags: admin_users

- name: create admin user(s)
  ansible.builtin.user:
    name: "{{ item.name }}"
    password: "{{ item.pass|default('*') }}"
    uid: "{{ item.uid }}"
    shell: "{{ item.shell|default('/bin/bash') }}"
    groups: "{{ auth_sysadmin_group }}"
    append: true
  loop: "{{ auth_sysadmin_users }}"
  tags: admin_users

- name: "add ssh key(s) for sysadmin group"
  ansible.posix.authorized_key:
    user: "{{ item.name }}"
    state: present
    key: "{{ item.ssh_keys | flatten | join('\n') }}"
    exclusive: " {{ auth_remove_other_ssh_keys|bool }}"
  loop: "{{ auth_sysadmin_users }}"
  when: item.ssh_keys is defined
  tags: ssh-copy-key

- name: create sudoers file for admin group
  ansible.builtin.template: >
    src: sysadmin_group.j2
    dest: /etc/sudoers.d/sysadmin_group
    owner: root
    group: root
    mode: 0440
    validate: /usr/sbin/visudo -cf %s
  tags: 
    - admin_users
    - sudo

- name: create normal user(s)
  ansible.builtin.user:
    name: "{{ item.name }}"
    password: "{{ item.pass|default('*') }}"
    uid: "{{ item.uid }}"
    shell: "{{ item.shell|default('/bin/bash') }}"
    groups: "{{ item.groups|default('') }}"
    append: true
  with_items: "{{ auth_users }}"
  when: auth_users is defined
  tags: users

- name: create lifesaver user
  ansible.builtin.user:
    name: "{{ auth_lifesaver_user }}"
    password: "{{ auth_lifesaver_pass }}"
    uid: "{{ auth_lifesaver_uid }}"
    shell: "{{ auth_lifesaver_shell }}"
  when: auth_lifesaver|default(false)
  tags: lifesaver

- name: create sudoers file for lifesaver user
  ansible.builtin.template:
    src: lifesaver_user.j2
    dest: /etc/sudoers.d/lifesaver_user
    owner: root
    group: root
    mode: 0440
    validate: /usr/sbin/visudo -cf %s
  when: auth_lifesaver|default(false)
  tags: 
    - lifesaver
    - sudo

- name: disable root local login (unix password)
  block:
    - ansible.builtin.pause: prompt="press ENTER if you are sure to disable root local login"
    - ansible.builtin.command: "passwd -l root"
  when: auth_disable_root|default(false)
